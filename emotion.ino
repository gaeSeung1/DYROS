#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#include <Arduino.h>

const int num = 128;
const int pin = 7;
long incomingByte = 1;
Adafruit_NeoPixel Pixel = Adafruit_NeoPixel(num, pin, NEO_GRB + NEO_KHZ800);

int arr_umm[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_surprise[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_surprise2[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_happy[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_happy2[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_happy3[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_sad[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_sad2[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_sad3[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_no[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_terrible[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_merong[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_merong2[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int arr_heart[num] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};


//////////arduino setup//////////
void setup() {
  Pixel.begin();
  Pixel.setBrightness(80);
  Serial.begin(115200);
  Pixel.clear();
  Pixel.show();
}

//////////emotion//////////
void umm(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_umm[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void surprise(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_surprise[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void surprise2(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_surprise2[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void happy(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_happy[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void happy2(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_happy2[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void happy3(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_happy3[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void sad(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_sad[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void sad2(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_sad2[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void sad3(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_sad3[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void no(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_no[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void terrible(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_terrible[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void merong(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_merong[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void merong2(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_merong2[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}
void heart(){
       Pixel.clear();
       for (int i = 0; i < 128; i++) {
        if (arr_heart[i] == 1){
          Pixel.setPixelColor(i, Pixel.Color(255, 0, 0));  
         }          
        }
      Pixel.show();
}

//////////speak//////////
void speak(){
    surprise();
    delay(300);
    umm();
    delay(300);
  
}


//////////clear//////////
void clear(){
  Pixel.clear();
  Pixel.show();
}


//////////arduino loop//////////
void loop() {
 //Serial.flush();
 incomingByte = 1;
 if(Serial.available()>0)
  {    
  //char incomingByte = Serial.read();
    
    long incomingByte_temp = Serial.parseInt();
    if(incomingByte_temp != -1)
    {
      if(incomingByte_temp != 0)
      {
        incomingByte = incomingByte_temp;
      }
    }
  }
  
    if(incomingByte == 1)
    {
      umm();
    }
    else if(incomingByte == 2)
    {
      happy3();
    }
    else if(incomingByte == 3)
    {
      surprise();
    }
    else if(incomingByte == 4)
    {
      sad2();
    }
    else if(incomingByte == 5)
    {
      speak();
    }
      //Serial.println(incomingByte);
  delay(1000);
}
